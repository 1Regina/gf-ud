-- utterances and sentences
Utt ::= Utt Punct # head punct

Utt ::= S
Utt ::= QS
Utt ::= NP
Utt ::= AP
Utt ::= IP
Utt ::= IAdv
Utt ::= Num

-- embedded sentences
SC ::= S_that
SC ::= QS
SC ::= VP_to

-- sentences
S ::= NP VP  # nsubj head
S ::= NP do neg VP  # nsubj aux advmod head
S ::= NP have VP  # nsubj aux head
S ::= NP have neg VP  # nsubj aux advmod head
S ::= NP aux VP  # nsubj aux head
S ::= NP aux neg VP  # nsubj aux advmod head
S ::= NP be Comp # nsubj cop head
S ::= NP be neg Comp # nsubj cop advmod head
S ::= NP be Comp # nsubj cop head
S ::= NP have be Comp # nsubj aux cop head
S ::= NP have neg be Comp # nsubj aux advmod cop head
S ::= NP aux be Comp # nsubj aux cop head
S ::= NP aux not be Comp # nsubj aux advmod cop head
S ::= NP VP_pass # nsubj:pass head
S ::= there be_V NP # expl head nsubj
S ::= it be AP # expl cop head
S ::= NP be_V S_that # nsubj head ccomp
S ::= NP be_V VP_to # nsubj head ccomp
S ::= SC VP # csubj head
S ::= SC do neg VP # csubj aux advmod head
S ::= SC VP_pass # csubj:pass head
S ::= S_front NP VS # parataxis nsubj head

QS ::= do NP VP # aux nsubj head
QS ::= aux NP VP # aux nsubj head
QS ::= aux NP have VP # aux nsubj aux head
QS ::= be NP Comp # cop nsubj head
QS ::= be NP neg Comp # cop nsubj advmod head
QS ::= be neg NP Comp # cop nsubj advmod head
QS ::= IP VP # nsubj head
QS ::= IP neg VP # nsubj advmod head
QS ::= IP be Comp # nsubj cop head
QS ::= IP do NP VPSlash # obj aux nsubj head
QS ::= IP do NP neg VPSlash # obj aux nsubj advmod head
QS ::= IAdv do NP VP # advmod aux nsubj head
QS ::= IAdv do NP neg VP # advmod aux nsubj advmod head
QS ::= IAdv aux NP VP # advmod aux nsubj head
QS ::= IAdv aux NP neg VP # advmod aux nsubj advmod head
QS ::= IAdv be NP Comp # advmod cop nsubj head
QS ::= IAdv be NP neg Comp # advmod cop nsubj advmod head
QS ::= IAdv be neg NP Comp # advmod cop nsubj advmod head

RS ::= RP VP # nsubj head
RS ::= RP do neg VP # nsubj aux advmod head
RS ::= RP be Comp # nsubj cop head
RS ::= RP have be Comp # nsubj aux cop head
RS ::= RP have VP # nsubj aux head
RS ::= RP have neg VP # nsubj aux advmod head
RS ::= RP NP VPSlash # obj nsubj head
RS ::= RP NP neg VPSlash # obj nsubj advmod head
RS ::= NP VPSlash # nsubj head
RS ::= NP neg VPSlash # nsubj advmod head

S  ::= S_subcomma S # advcl head
S  ::= S S_sub # head advcl

VP ::= V
VP ::= aux # # 0.001
VP ::= V2 NP  # head obj
VP ::= V2 NP_obl # head obl
VP ::= V3 NP NP # head iobj obj
VP ::= V2C NP NP # head obj xcomp
VP ::= V2C NP AP # head obj xcomp
VP ::= VS S_that # head ccomp
VP ::= VV VP_to # head xcomp
VP ::= V2V NP VP # head obj xcomp
VP ::= V2V NP VP_to # head obj xcomp
VP ::= VP Adv # head advmod
VP ::= VP NP_obl # head obl # 0.001
VP ::= VS S_direct # head parataxis

VP_pass ::= be VPSlash # aux:pass head
VP_pass ::= be neg VPSlash # aux:pass advmod head
VP_pass ::= have be VPSlash # aux aux:pass head
VP_pass ::= have neg be VPSlash # aux advmod aux:pass head
VP_pass ::= VP_pass Adv # head advmod
VP_pass ::= VP_pass NP_obl # head nmod

VPSlash ::= V2
VPSlash ::= VPSlash NP_obl  # head obl # 0.001
VPSlash ::= VP Prep # head case # 0.001

S_that ::= S
S_that ::= that S # mark head

S_direct ::= colon S # punct head
S_direct ::= colon quote S quote # punct punct head punct
S_front  ::= S comma # head punct
S_front  ::= quote S quote comma # punct head punct punct

Comp ::= AP
Comp ::= NP
Comp ::= Adv
Comp ::= NP_obl

-- VP with to
VP_to ::= to VP # mark head
VP_to ::= to be Comp # mark cop head
VP_to ::= neg to VP # advmod mark head
VP_to ::= beg to be Comp # advmod mark cop head

-- oblique noun phrase
NP_obl ::= Prep NP # case head

-- noun phrases
NP ::= PN
NP ::= CN
NP ::= Pron
NP ::= Det CN # det head
NP ::= NP NP_obl # head nmod
NP ::= Predet NP # det:predet head
NP ::= NP_poss CN # nmod:poss head
NP ::= Num NP # nummod head
NP ::= N PN # head flat
NP ::= NP SC # head acl
NP ::= NP S_sub # head acl
NP ::= NP RS # head acl:relcl

NP_poss ::= NP 's # head case
NP_poss ::= Pron_poss

-- some very special rules ---
NP ::= Det CN_quoted # det head
CN_quoted ::= quote CN quote # punct head punct
NP ::= NP NP_appos # head appos
NP_appos ::= Punct_appos NP # punct head

Num ::= Card
Num ::= Digits

CN ::= N
CN ::= AP CN # amod head
CN ::= CN AP # head amod # 0.01

PN ::= PN_one PN # head flat

N ::= N_one N # compound head

Card ::= Card_one Card # compound head

IP ::= IDet CN # det head

-- adjectival phrases
AP ::= A
AP ::= AdA A   # advmod head
AP ::= AP NP_obl  # head nmod

-- adverbials
-- Adv ::= Prep NP # case head

S_sub      ::= Subj S # mark head
S_subcomma ::= S_sub comma # head punct

-- coordination
AP       ::= AP AP_conj         # head conj
AP       ::= AP AP_comma APConj # head conj conj
AP       ::= Conj_pre AP AP_conj         # cc:preconj head conj
AP       ::= Conj_pre AP AP_comma APConj # cc:preconj head conj conj
AP_conj  ::= Conj AP # cc head
AP_comma ::= comma AP # punct head 

NP       ::= NP NP_conj         # head conj
NP       ::= NP NP_comma NPConj # head conj conj
NP       ::= Conj_pre NP NP_conj         # cc:preconj head conj
NP       ::= Conj_pre NP NP_comma NPConj # cc:preconj head conj conj
NP_conj  ::= Conj NP # cc head
NP_comma ::= comma NP # punct head 

S       ::= S S_conj         # head conj
S       ::= S S_comma SConj # head conj conj
S       ::= Conj_pre S S_conj         # cc:preconj head conj
S       ::= Conj_pre S S_comma SConj # cc:preconj head conj conj
S_conj  ::= Conj S # cc head
S_comma ::= comma S # punct head 

-- POS tag configurations
#pos AUX be do have aux
#pos VERB V V2 V3 VS VV V2V V2C be_V
#pos NOUN N N_one
#pos ADJ A
#pos PROPN PN PN_one
#pos ADV Adv IAdv AdA Predet neg
#pos SCONJ Subj that if
#pos CConj Conj Conj_pre
#pos DET Det IDet
#pos PRON Pron IP RP Pron_poss there it
#pos PART to 's
#pos PUNCT Punct Punct_appos comma quote colon
#pos NUM Card Digits Card_one

-- structural word lexicon: normal categories
#token Prep at from in of on to with than
#token IP who whom what
#token IAdv when where why
#token AdA very too genetically
#token Det a an the every some many no
#token Pron I me you he him she her it we us they them
#token Subj if when although because as
#token aux can could must will would shall should
#token Punct . ! ?
#token Punct_appos , :
#token Conj and or nor
#token Conj_pre both either neither
#token IDet which
#token Pron_poss my your his her its our their
#token RP that who
#token Card five

-- structural word lexicon: syncategorematic words
#token be am is are was were be been
#token be_V is are was were be been
#token do do does did
#token have have has had
#token neg not
#token that that
#token to to
#token it it
#token there there
#token comma ,
#token colon :
#token quote "
#token 's 's

-- content word lexicon
#token PN John Mary
#token V sleeps sleep slept walk walks walked sing sings sang sung move moves moved happen happens happened leave leaves left run runs ran
#token V2 sees see saw seen love loves loved look looks give gives gave concern concerns concerned make makes made decide decided
#token V2 know knows knew known
#token V3 give gives gave
#token V2C call calls called consider considers considered
#token V2V see sees saw consider considers considered
#token VS say says said believe believes
#token VV want wants try tries
#token A old good curious black best cold modified tired bad large larger
#token N love sleep loves sleeps man men woman women cat cats doctor beer world elephant room hint hints reason reasons loser losers movie life
#token N house president moon Earth girl girls
#token Adv now today here before
#token Predet probably only




