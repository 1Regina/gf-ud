-- utterances and sentences
Utt ::= Utt Punct        # head punct
Utt ::= Conj Utt         # cc head
Utt ::= NP_obl comma Utt # cc punct head
Utt ::= parenth Utt parenth # punct head punct

Utt ::= S
Utt ::= QS
Utt ::= Imp
Utt ::= NP
Utt ::= AP
Utt ::= IP
Utt ::= IAdv
Utt ::= Num

-- sentences
S ::= NP VP # nsubj head
S ::= NP do neg VP_inf  # nsubj aux advmod head
S ::= NP have neg? VP  # nsubj aux advmod head
S ::= NP aux neg? have? VP  # nsubj aux advmod aux head

S ::= NP cop AdV? neg? Comp # nsubj cop advmod advmod head
S ::= NP have AdV? neg? cop Comp # nsubj aux advmod advmod cop head
S ::= NP aux AdV?  neg? have? cop Comp # nsubj aux advmod advmod aux cop head

S ::= NP cop AdV? neg? VP_pass # nsubj:pass aux:pass advmod advmod head # 0.8
S ::= NP have AdV? neg? cop VP_pass # nsubj:pass aux advmod advmod aux:pass head # 0.8
S ::= NP aux AdV? neg? have? cop VP_pass # nsubj:pass aux advmod advmod aux aux:pass head # 0.8

S ::= there be_V AdV? neg? NP # expl head advmod advmod nsubj
S ::= there have AdV? neg? be_V neg? NP # expl aux advmod advmod head nsubj
S ::= there aux AdV? neg? have? be_V NP # expl aux advmod advmod aux head nsubj
S ::= it cop AdV? neg? AP # expl cop advmod advmod head

S ::= NP be_V neg? SC # nsubj head advmod ccomp
S ::= NP have neg? be_V SC # nsubj aux advmod head ccomp
S ::= NP aux neg? have? be_V SC # nsubj aux advmod aux head ccomp

S ::= SC VP # csubj head
S ::= SC do neg VP_inf # csubj aux advmod head
S ::= SC cop neg? VP_pass # csubj:pass aux:pass advmod head
S ::= SC have neg? cop VP_pass # csubj:pass aux advmod aux:pass head
S ::= S_front NP V # parataxis nsubj head

QS ::= do NP neg? VP # aux nsubj advmod head
QS ::= aux NP neg? have? VP # aux nsubj advmod aux head
QS ::= cop NP neg? Comp # cop nsubj advmod head
QS ::= cop neg NP Comp # cop nsubj advmod head

QS ::= cop NP neg? VP_pass # aux:pass nsubj:pass advmod head
QS ::= have NP neg? cop VP_pass # aux nsubj:pass advmod aux:pass head
QS ::= aux NP neg? have? cop VP_pass # aux nsubj:pass advmod aux:pass aux head

QS ::= IP VP # nsubj head
QS ::= IP do neg VP # nsubj aux advmod head
QS ::= IP aux neg? have? VP # nsubj aux advmod aux head
QS ::= IP cop neg? Comp # nsubj cop advmod head
QS ::= IP aux neg? have? cop Comp # nsubj cop advmod aux head
QS ::= IP do NP neg? VPSlash # obj aux nsubj advmod head
QS ::= IP aux NP neg? have? VPSlash # obj aux nsubj advmod aux head

QS ::= IP cop neg? VP_pass # nsubj:pass aux:pass advmod head
QS ::= IP have neg? cop VP_pass # nsubj:pass aux advmod aux:pass head
QS ::= IP aux neg? have? cop VP_pass # nsubj:pass aux advmod aux:pass aux head

QS ::= IAdv do NP neg? VP # advmod aux nsubj advmod head
QS ::= IAdv aux NP neg? have? VP # advmod aux nsubj advmod aux head
QS ::= IAdv cop NP neg? Comp # advmod cop nsubj advmod head
QS ::= IAdv cop neg NP Comp # advmod cop nsubj advmod head

QS ::= IAdv cop NP neg? VP_pass # advmod aux:pass nsubj:pass advmod head

-- indirect questions
QS ::= if S # mark head
QS ::= IP NP does? neg? VPSlash # obj nsubj nsubj advmod head
QS ::= IP NP aux neg? have? VPSlash # obj nsubj aux advmod aux head
QS ::= IAdv NP do? neg? VP # advmod nsubj aux advmod head
QS ::= IAdv NP aux neg? have? VP # advmod nsubj aux advmod aux head
QS ::= IAdv NP cop neg? Comp # advmod nsubj cop advmod head

RS ::= RP VP # nsubj head
RS ::= RP do neg VP # nsubj aux advmod head
RS ::= RP have neg? VP # nsubj aux advmod head
RS ::= RP cop neg? Comp # nsubj cop advmod head
RS ::= RP have neg? cop Comp # nsubj aux advmod cop head

RS ::= RP NP VPSlash # obj nsubj head
RS ::= RP NP do neg VPSlash # obj nsubj aux advmod head
RS ::= NP VPSlash # nsubj head
RS ::= NP do neg VPSlash # nsubj aux advmod head

-- imperatives
Imp ::= do? neg? VP # aux advmod head
Imp ::= do? neg? cop Comp # aux advmod cop head

-- sentences with adverbials
S  ::= S_subcomma S # advcl head
S  ::= S S_sub # head advcl
S  ::= Adv_comma S # advmod head
S  ::= NP_oblcomma S # nmod head

-- embedded sentences
SC ::= S_that
SC ::= QS
SC ::= VP_to
SC ::= VP_ger


VP ::= V NP? # head obj
VP ::= V NP NP # head iobj obj
VP ::= V NP AP # head obj xcomp
VP ::= V S_that # head ccomp
VP ::= V VP_to # head xcomp
VP ::= V NP VP_inf # head obj xcomp
VP ::= V NP VP_to # head obj xcomp
VP ::= V S_direct # head parataxis

VP ::= aux # # 0.001

VP ::= VP comma? Adv # head punct advmod
VP ::= AdV VP # advmod head 
VP ::= VP NP_obl # head obl # 0.001

VP_pass ::= V_pass
VP_pass ::= V_pastpart
VP_pass ::= VP_pass Adv # head advmod # 0.9
VP_pass ::= VP_pass NP_obl # head nmod # 0.99

VP_ger ::= V_ger
VP_ger ::= VP_ger Adv # head advmod
VP_ger ::= VP_ger NP_obl # head nmod

VPSlash ::= V
VPSlash ::= VPSlash NP_obl  # head obl # 0.001
VPSlash ::= VPSlash Adv # head advmod
VPSlash ::= VP Prep # head case # 0.001

S_that ::= that? S # mark head

S_direct ::= colon S # punct head
S_direct ::= colon quote S quote # punct punct head punct
S_front  ::= S comma # head punct
S_front  ::= quote S quote comma # punct head punct punct

Comp ::= AP
Comp ::= NP
Comp ::= Adv
Comp ::= NP_obl
Comp ::= Comp comma? NP_obl # head punct nmod
Comp ::= Comp comma? Adv # head punct advmod

-- VP with to
VP_to  ::= neg? to VP_inf # advmod mark head

VP_inf ::= V_inf NP? # head obj
VP_inf ::= V_inf NP NP # head iobj obj
VP_inf ::= V_inf NP AP # head obj xcomp
VP_inf ::= V_inf S_that # head ccomp
VP_inf ::= V_inf VP_to # head xcomp
VP_inf ::= V_inf NP VP_inf # head obj xcomp
VP_inf ::= V_inf NP VP_to # head obj xcomp
VP_inf ::= V_inf S_direct # head parataxis
VP_inf ::= VP_inf comma? Adv # head punct advmod
VP_inf ::= AdV VP_inf # advmod head 
VP_inf ::= VP_inf NP_obl # head obl # 0.001
VP_inf ::= cop_inf Comp # cop head
VP_inf ::= cop_inf VP_pass # aux:pass head

-- oblique noun phrase
NP_obl ::= Prep NP # case head

-- noun phrases
NP ::= PN
NP ::= Pron
NP ::= Num # # 0.1
NP ::= Det # # 0.1

NP ::= Det? CN # det head
NP ::= NP comma? NP_obl # head punct nmod
NP ::= Predet NP # det:predet head
NP ::= NP_poss CN # nmod:poss head
NP ::= Num NP # nummod head
NP ::= N PN # head flat
NP ::= NP SC # head acl
NP ::= NP comma? S_sub # head punct acl
NP ::= NP comma? RS # head punct acl:relcl
NP ::= Symb Num # head nummod
NP ::= NP comma? VP_pass # head punct acl

NP_poss ::= NP 's # head case
NP_poss ::= Pron_poss

-- some very special rules ---
NP        ::= Det CN_quoted # det head
CN_quoted ::= quote CN quote # punct head punct
NP        ::= NP NP_appos # head appos # 0.01
NP_appos  ::= Punct_appos NP # punct head

Num ::= Card
Num ::= Digits

CN ::= N
CN ::= AP CN # amod head
CN ::= CN comma? AP # head punct amod # 0.01

PN ::= PN_one PN # head flat

N ::= N_one N # compound head
N ::= PN CN # compound head

Card ::= Card_one Card # compound head

IP ::= IDet CN # det head

-- adjectival phrases
AP ::= A
AP ::= AdA AP     # advmod head
AP ::= AP NP_obl  # head nmod
AP ::= V_pass
AP ::= V_pastpart
AP ::= V_ger

-- adverbials
-- Adv ::= Prep NP # case head
Adv ::= Prep VP_ger # case head

S_sub       ::= comma? Subj S # punct mark head
S_subcomma  ::= Subj S comma? # mark head punct
Adv_comma   ::= Adv comma? # head punct
NP_oblcomma ::= NP_obl comma? # head punct
S_sub       ::= comma? Subj VP # punct mark head # 0.1
S_subcomma  ::= Subj VP comma? # mark head punct # 0.1

-- coordination
S       ::= Conj_pre? ListS S_conj # cc:preconj head conj
ListS   ::= S
ListS   ::= ListS S_comma # head conj
S_conj  ::= comma? Conj S # punct cc head
S_comma ::= comma S # punct head

NP       ::= Conj_pre? ListNP NP_conj # cc:preconj head conj
ListNP   ::= NP
ListNP   ::= ListNP NP_comma # head conj
NP_conj  ::= comma? Conj NP # punct cc head
NP_comma ::= comma NP # punct head

AP       ::= Conj_pre? ListAP AP_conj # cc:preconj head conj
ListAP   ::= AP
ListAP   ::= ListAP AP_comma # head conj
AP_conj  ::= comma? Conj AP # punct cc head
AP_comma ::= comma AP # punct head

VP       ::= Conj_pre? ListVP VP_conj # cc:preconj head conj
ListVP   ::= VP
ListVP   ::= ListVP VP_comma # head conj
VP_conj  ::= comma? Conj VP # punct cc head
VP_comma ::= comma VP # punct head

VP_inf       ::= Conj_pre? ListVP_inf VP_inf_conj # cc:preconj head conj
ListVP_inf   ::= VP_inf
ListVP_inf   ::= ListVP VP_inf_comma # head conj
VP_inf_conj  ::= comma? Conj VP_inf # punct cc head
VP_inf_comma ::= comma VP_inf # punct head

-- in Adv conjunctions, we want to include NP_obl parts: all that matters for UD is the category of the first conjunct
Adv       ::= Conj_pre? ListAdv Adv_conj # cc:preconj head conj
ListAdv   ::= Adv
ListAdv   ::= ListAdv Adv_comma # head conj
Adv_conj  ::= comma? Conj Adv # punct cc head
Adv_conj  ::= comma? Conj NP_obl # punct cc head
Adv_comma ::= comma Adv # punct head
Adv_comma ::= comma NP_obl # punct head

NP_obl     ::= Conj_pre? ListNP_obl Adv_conj # cc:preconj head conj
ListNP_obl ::= NP_obl
ListNP_obl ::= ListNP_obl Adv_comma # head conj


-- POS tag configurations
#pos AUX cop do have aux
#pos VERB V be_V
#pos NOUN N N_one
#pos ADJ A
#pos PROPN PN PN_one
#pos ADV Adv IAdv AdA AdV Predet neg
#pos SCONJ Subj that if
#pos CCONJ Conj Conj_pre
#pos DET Det IDet
#pos PRON Pron IP RP Pron_poss there it
#pos PART to 's
#pos PUNCT Punct Punct_appos comma quote colon parenth
#pos NUM Card Digits Card_one
#pos ADP Prep
#pos SYM Symb

#pos VERB_Voice=Pass V_pass
-- in PUD, Voice=Pass is not used
#pos VERB_Tense=Past|VerbForm=Part V_pastpart

#pos VERB_VerbForm=Ger V_ger
#pos VERB_VerbForm=Inf V_inf

#pos AUX_VerbForm=Inf cop_inf

#pos PRON_PronType=Rel RP
#pos PRON_PronType=Int IAdv

-- structural word lexicon: normal categories
#token Prep at from in of on to with than
#token IP who whom what
#token IAdv when where why
#token AdA very too genetically
#token AdV definitely always never
#token Det a an the every some many no
#token Pron I me you he him she her it we us they them
#token Subj if when although because as
#token aux can could must will would shall should
#token Punct . ! ?
#token Punct_appos , :
#token Conj and or nor
#token Conj_pre both either neither
#token IDet which
#token Pron_poss my your his her its our their
#token RP that who
#token Card five

-- structural word lexicon: syncategorematic words
#token cop am is are was were be been being
#token cop_inf be
#token be_V is are was were be been being
#token do do does did
#token have have has had
#token neg not n't
#token that that
#token to to
#token it it
#token if if whether
#token there there
#token comma ,
#token colon :
#token quote "
#token 's 's
#token parenth ( ) [ ]

--------------------------
-- for accuracy in the book examples

--VP ::= V
--VP ::= aux # # 0.001
--VP ::= V2 NP  # head obj
--VP ::= V2 NP_obl # head obl
--VP ::= V3 NP NP # head iobj obj
--VP ::= V2C NP NP # head obj xcomp
--VP ::= V2C NP AP # head obj xcomp
--VP ::= VS S_that # head ccomp
--VP ::= VV VP_to # head xcomp
--VP ::= V2V NP VP # head obj xcomp
--VP ::= V2V NP VP_to # head obj xcomp
--VP ::= VP comma? Adv # head punct advmod
--VP ::= AdV --VP # advmod head 
--VP ::= VP NP_obl # head obl # 0.001
--VP ::= VS S_direct # head parataxis



-- default dependencies for chunking
-- learned from en_ewt-ud-train.conllu, by taking the most frequent for each pos (#dep) and pos-pos pair (#dirdep)

-- contex-free
#dep ADJ amod
#dep ADP case
#dep ADV advmod
#dep AUX aux
#dep CCONJ cc
#dep DET det
#dep INTJ discourse
#dep NOUN obj
#dep NUM nummod
#dep PART mark
#dep PRON nsubj
#dep PROPN compound
#dep PUNCT punct
#dep SCONJ mark
#dep SYM case
#dep VERB advcl
#dep X goeswith

-- context-dependent, True = dep before head
#dirdep ADJ ADJ False conj
#dirdep ADJ ADJ True amod
#dirdep ADJ ADV False advcl
#dirdep ADJ ADV True obl:npmod
#dirdep ADJ AUX False conj
#dirdep ADJ AUX True advmod
#dirdep ADJ DET False conj
#dirdep ADJ DET True advmod
#dirdep ADJ NOUN False amod
#dirdep ADJ NOUN True amod
#dirdep ADJ NUM False conj
#dirdep ADJ NUM True advmod
#dirdep ADJ PRON False amod
#dirdep ADJ PRON True advmod
#dirdep ADJ PROPN False conj
#dirdep ADJ PROPN True amod
#dirdep ADJ SCONJ False fixed
#dirdep ADJ SYM False amod
#dirdep ADJ SYM True advmod
#dirdep ADJ VERB False xcomp
#dirdep ADJ VERB True nsubj
#dirdep ADJ X False conj
#dirdep ADP ADJ False fixed
#dirdep ADP ADJ True case
#dirdep ADP ADP False fixed
#dirdep ADP ADP True case
#dirdep ADP ADV False fixed
#dirdep ADP ADV True case
#dirdep ADP CCONJ True case
#dirdep ADP DET False fixed
#dirdep ADP DET True case
#dirdep ADP INTJ True case
#dirdep ADP NOUN False nmod
#dirdep ADP NOUN True case
#dirdep ADP NUM True case
#dirdep ADP PRON False case
#dirdep ADP PRON True case
#dirdep ADP PROPN True case
#dirdep ADP SCONJ False fixed
#dirdep ADP SYM True case
#dirdep ADP VERB False compound:prt
#dirdep ADP VERB True mark
#dirdep ADP X True case
#dirdep ADV ADJ False advmod
#dirdep ADV ADJ True advmod
#dirdep ADV ADP True advmod
#dirdep ADV ADV False fixed
#dirdep ADV ADV True advmod
#dirdep ADV AUX False advmod
#dirdep ADV AUX True advmod
#dirdep ADV CCONJ False advmod
#dirdep ADV DET False obl
#dirdep ADV DET True advmod
#dirdep ADV INTJ False advmod
#dirdep ADV NOUN False advmod
#dirdep ADV NOUN True advmod
#dirdep ADV NUM False advmod
#dirdep ADV NUM True advmod
#dirdep ADV PART False advcl
#dirdep ADV PART True advmod
#dirdep ADV PRON False advmod
#dirdep ADV PRON True advmod
#dirdep ADV PROPN False advmod
#dirdep ADV PROPN True advmod
#dirdep ADV PUNCT True advmod
#dirdep ADV SCONJ False fixed
#dirdep ADV SCONJ True advmod
#dirdep ADV SYM False advmod
#dirdep ADV SYM True advmod
#dirdep ADV VERB False advmod
#dirdep ADV VERB True advmod
#dirdep AUX ADJ False cop
#dirdep AUX ADJ True cop
#dirdep AUX ADP True cop
#dirdep AUX ADV False cop
#dirdep AUX ADV True cop
#dirdep AUX AUX False conj
#dirdep AUX AUX True aux
#dirdep AUX DET False aux
#dirdep AUX DET True cop
#dirdep AUX INTJ True cop
#dirdep AUX NOUN False cop
#dirdep AUX NOUN True cop
#dirdep AUX NUM True cop
#dirdep AUX PRON False cop
#dirdep AUX PRON True cop
#dirdep AUX PROPN False cop
#dirdep AUX PROPN True cop
#dirdep AUX SYM True cop
#dirdep AUX VERB False aux:pass
#dirdep AUX VERB True aux
#dirdep AUX X True cop
#dirdep CCONJ ADJ False cc
#dirdep CCONJ ADJ True cc
#dirdep CCONJ ADP True cc
#dirdep CCONJ ADV True cc
#dirdep CCONJ AUX True cc
#dirdep CCONJ CCONJ False conj
#dirdep CCONJ CCONJ True cc
#dirdep CCONJ DET True cc
#dirdep CCONJ INTJ True cc
#dirdep CCONJ NOUN False cc
#dirdep CCONJ NOUN True cc
#dirdep CCONJ NUM True cc
#dirdep CCONJ PART True cc
#dirdep CCONJ PRON True cc
#dirdep CCONJ PROPN True cc
#dirdep CCONJ PUNCT True cc
#dirdep CCONJ SCONJ False fixed
#dirdep CCONJ SCONJ True cc
#dirdep CCONJ SYM True cc
#dirdep CCONJ VERB False cc
#dirdep CCONJ VERB True cc
#dirdep CCONJ X True cc
#dirdep DET ADJ False obl
#dirdep DET ADJ True det
#dirdep DET ADV False obl
#dirdep DET ADV True mark
#dirdep DET DET False conj
#dirdep DET DET True det:predet
#dirdep DET INTJ False vocative
#dirdep DET INTJ True nsubj
#dirdep DET NOUN False nmod
#dirdep DET NOUN True det
#dirdep DET NUM False nmod
#dirdep DET NUM True det
#dirdep DET PRON False det
#dirdep DET PRON True det
#dirdep DET PROPN False cc:preconj
#dirdep DET PROPN True det
#dirdep DET SCONJ False fixed
#dirdep DET SYM False advmod
#dirdep DET SYM True det
#dirdep DET VERB False obj
#dirdep DET VERB True nsubj
#dirdep DET X True det
#dirdep INTJ ADJ False discourse
#dirdep INTJ ADJ True discourse
#dirdep INTJ ADP False discourse
#dirdep INTJ ADV False discourse
#dirdep INTJ ADV True discourse
#dirdep INTJ AUX True discourse
#dirdep INTJ CCONJ False discourse
#dirdep INTJ DET False discourse
#dirdep INTJ INTJ False discourse
#dirdep INTJ INTJ True discourse
#dirdep INTJ NOUN False discourse
#dirdep INTJ NOUN True discourse
#dirdep INTJ NUM True discourse
#dirdep INTJ PRON True discourse
#dirdep INTJ PROPN False discourse
#dirdep INTJ PROPN True discourse
#dirdep INTJ VERB False discourse
#dirdep INTJ VERB True discourse
#dirdep NOUN ADJ False obl
#dirdep NOUN ADJ True nsubj
#dirdep NOUN ADP False fixed
#dirdep NOUN ADP True nsubj
#dirdep NOUN ADV False obl
#dirdep NOUN ADV True obl:npmod
#dirdep NOUN AUX False nsubj
#dirdep NOUN AUX True nsubj
#dirdep NOUN DET False nmod
#dirdep NOUN DET True nsubj
#dirdep NOUN INTJ False vocative
#dirdep NOUN NOUN False nmod
#dirdep NOUN NOUN True compound
#dirdep NOUN NUM False appos
#dirdep NOUN NUM True nsubj
#dirdep NOUN PRON False nmod
#dirdep NOUN PRON True nsubj
#dirdep NOUN PROPN False appos
#dirdep NOUN PROPN True compound
#dirdep NOUN PUNCT False dep
#dirdep NOUN SCONJ False fixed
#dirdep NOUN SCONJ True obl:npmod
#dirdep NOUN SYM False appos
#dirdep NOUN SYM True nsubj
#dirdep NOUN VERB False obj
#dirdep NOUN VERB True nsubj
#dirdep NOUN X False appos
#dirdep NOUN X True compound
#dirdep NUM ADJ False obl
#dirdep NUM ADJ True nsubj
#dirdep NUM ADV False obl
#dirdep NUM ADV True advmod
#dirdep NUM AUX False obl
#dirdep NUM DET False nmod
#dirdep NUM DET True det
#dirdep NUM NOUN False nummod
#dirdep NUM NOUN True nummod
#dirdep NUM NUM False nmod
#dirdep NUM NUM True compound
#dirdep NUM PRON False nmod
#dirdep NUM PROPN False nummod
#dirdep NUM PROPN True nummod
#dirdep NUM SYM False nummod
#dirdep NUM SYM True nummod
#dirdep NUM VERB False obl
#dirdep NUM VERB True nsubj
#dirdep NUM X False obl
#dirdep PART ADJ False conj
#dirdep PART ADJ True advmod
#dirdep PART ADP True mark
#dirdep PART ADV False fixed
#dirdep PART ADV True advmod
#dirdep PART AUX False advmod
#dirdep PART AUX True advmod
#dirdep PART DET False advmod
#dirdep PART DET True advmod
#dirdep PART NOUN False case
#dirdep PART NOUN True advmod
#dirdep PART NUM False case
#dirdep PART NUM True mark
#dirdep PART PRON False case
#dirdep PART PRON True advmod
#dirdep PART PROPN False case
#dirdep PART PROPN True advmod
#dirdep PART SCONJ False fixed
#dirdep PART SYM True mark
#dirdep PART VERB False advmod
#dirdep PART VERB True mark
#dirdep PRON ADJ False obl
#dirdep PRON ADJ True nsubj
#dirdep PRON ADP True nsubj
#dirdep PRON ADV False obl
#dirdep PRON ADV True nsubj
#dirdep PRON AUX False nsubj
#dirdep PRON AUX True nsubj
#dirdep PRON DET False nmod
#dirdep PRON DET True nsubj
#dirdep PRON INTJ False vocative
#dirdep PRON NOUN False nmod
#dirdep PRON NOUN True nmod:poss
#dirdep PRON NUM False nmod
#dirdep PRON NUM True nsubj
#dirdep PRON PRON False conj
#dirdep PRON PRON True nsubj
#dirdep PRON PROPN False conj
#dirdep PRON PROPN True nsubj
#dirdep PRON SYM False appos
#dirdep PRON SYM True nsubj
#dirdep PRON VERB False obj
#dirdep PRON VERB True nsubj
#dirdep PROPN ADJ False obl
#dirdep PROPN ADJ True nsubj
#dirdep PROPN ADV False obl
#dirdep PROPN ADV True nsubj
#dirdep PROPN AUX False nsubj
#dirdep PROPN AUX True nsubj
#dirdep PROPN CCONJ False obl
#dirdep PROPN DET False nmod
#dirdep PROPN INTJ False vocative
#dirdep PROPN NOUN False nmod
#dirdep PROPN NOUN True compound
#dirdep PROPN NUM False nmod
#dirdep PROPN NUM True nsubj
#dirdep PROPN PRON False nmod
#dirdep PROPN PRON True nsubj
#dirdep PROPN PROPN False flat
#dirdep PROPN PROPN True compound
#dirdep PROPN PUNCT False conj
#dirdep PROPN SYM False appos
#dirdep PROPN SYM True compound
#dirdep PROPN VERB False obl
#dirdep PROPN VERB True nsubj
#dirdep PUNCT ADJ False punct
#dirdep PUNCT ADJ True punct
#dirdep PUNCT ADP False punct
#dirdep PUNCT ADP True punct
#dirdep PUNCT ADV False punct
#dirdep PUNCT ADV True punct
#dirdep PUNCT AUX False punct
#dirdep PUNCT AUX True punct
#dirdep PUNCT CCONJ False punct
#dirdep PUNCT CCONJ True punct
#dirdep PUNCT DET False punct
#dirdep PUNCT DET True punct
#dirdep PUNCT INTJ False punct
#dirdep PUNCT INTJ True punct
#dirdep PUNCT NOUN False punct
#dirdep PUNCT NOUN True punct
#dirdep PUNCT NUM False punct
#dirdep PUNCT NUM True punct
#dirdep PUNCT PART False punct
#dirdep PUNCT PART True punct
#dirdep PUNCT PRON False punct
#dirdep PUNCT PRON True punct
#dirdep PUNCT PROPN False punct
#dirdep PUNCT PROPN True punct
#dirdep PUNCT PUNCT True dep
#dirdep PUNCT SCONJ False punct
#dirdep PUNCT SCONJ True punct
#dirdep PUNCT SYM False punct
#dirdep PUNCT SYM True punct
#dirdep PUNCT VERB False punct
#dirdep PUNCT VERB True punct
#dirdep PUNCT X False punct
#dirdep PUNCT X True punct
#dirdep SCONJ ADJ False fixed
#dirdep SCONJ ADJ True mark
#dirdep SCONJ ADP False fixed
#dirdep SCONJ ADP True mark
#dirdep SCONJ ADV False fixed
#dirdep SCONJ ADV True mark
#dirdep SCONJ AUX True mark
#dirdep SCONJ DET True mark
#dirdep SCONJ INTJ True mark
#dirdep SCONJ NOUN False nmod
#dirdep SCONJ NOUN True mark
#dirdep SCONJ NUM True mark
#dirdep SCONJ PART True mark
#dirdep SCONJ PRON False mark
#dirdep SCONJ PRON True case
#dirdep SCONJ PROPN True mark
#dirdep SCONJ SCONJ False fixed
#dirdep SCONJ SYM True mark
#dirdep SCONJ VERB False ccomp
#dirdep SCONJ VERB True mark
#dirdep SYM ADJ False discourse
#dirdep SYM ADJ True obl:npmod
#dirdep SYM ADP False punct
#dirdep SYM ADV False obl
#dirdep SYM ADV True cc
#dirdep SYM CCONJ True cc
#dirdep SYM NOUN False nmod
#dirdep SYM NOUN True compound
#dirdep SYM NUM False punct
#dirdep SYM NUM True case
#dirdep SYM PRON True nsubj
#dirdep SYM PROPN False list
#dirdep SYM PROPN True punct
#dirdep SYM SYM False conj
#dirdep SYM SYM True case
#dirdep SYM VERB False obj
#dirdep SYM VERB True nsubj:pass
#dirdep SYM X False punct
#dirdep SYM X True punct
#dirdep VERB ADJ False advcl
#dirdep VERB ADJ True advcl
#dirdep VERB ADP False conj
#dirdep VERB ADV False advcl
#dirdep VERB ADV True advcl
#dirdep VERB AUX False conj
#dirdep VERB AUX True advcl
#dirdep VERB CCONJ False advcl
#dirdep VERB DET False acl:relcl
#dirdep VERB DET True case
#dirdep VERB INTJ False conj
#dirdep VERB INTJ True parataxis
#dirdep VERB NOUN False acl:relcl
#dirdep VERB NOUN True amod
#dirdep VERB NUM False parataxis
#dirdep VERB NUM True parataxis
#dirdep VERB PART False advcl
#dirdep VERB PRON False acl:relcl
#dirdep VERB PRON True advcl
#dirdep VERB PROPN False acl:relcl
#dirdep VERB PROPN True amod
#dirdep VERB SCONJ False fixed
#dirdep VERB SYM False advcl
#dirdep VERB SYM True advcl
#dirdep VERB VERB False conj
#dirdep VERB VERB True advcl
#dirdep VERB X False parataxis
#dirdep VERB X True parataxis
#dirdep X ADJ False advmod
#dirdep X ADJ True nummod
#dirdep X ADP True goeswith
#dirdep X ADV False conj
#dirdep X ADV True goeswith
#dirdep X NOUN False appos
#dirdep X NOUN True goeswith
#dirdep X NUM False conj
#dirdep X PRON True goeswith
#dirdep X PROPN False list
#dirdep X PROPN True compound
#dirdep X PUNCT False goeswith
#dirdep X PUNCT True nummod
#dirdep X SCONJ True goeswith
#dirdep X SYM True advmod
#dirdep X VERB False obl
#dirdep X VERB True nummod
#dirdep X X False goeswith
#dirdep X X True compound



